CREATE OR REPLACE VIEW V_PRACOWNICY AS (
SELECT INITCAP(pierwsze_imie) || ' ' || INITCAP(nazwisko) Dane, 
CASE
WHEN plec = 'K' THEN 'Kobieta'
WHEN plec = 'M' THEN 'Mezczyzna'
END AS Plec
FROM pracownicy
);

SELECT  Dane
FROM V_PRACOWNICY
WHERE Plec = 'Kobieta';

SELECT text_length, text
FROM USER_VIEWS
WHERE view_name = 'V_PRACOWNICY';

CREATE OR REPLACE VIEW V_PRACOWNICY_DANE AS (
SELECT  id, pierwsze_imie, nazwisko, pesel, plec, data_urodzenia, id_oddzialu
FROM pracownicy
);

DESC V_PRACOWNICY_DANE;

INSERT INTO V_PRACOWNICY_DANE VALUES (55, 'Roman','Nowak', '77091956714', 'M', TO_DATE('19/09/1977','DD/MM/YYYY'), 2);

UPDATE V_PRACOWNICY_DANE
SET pierwsze_imie = 'Robert'
WHERE id = 55;

DELETE FROM V_PRACOWNICY_DANE WHERE id = 55;

SELECT *
FROM USER_UPDATABLE_COLUMNS
WHERE table_name = 'V_PRACOWNICY_DANE';

CREATE OR REPLACE VIEW V_PRACOWNICY_LICZBA_OSOB AS (
SELECT id_oddzialu, COUNT(id) liczba_osob
FROM pracownicy
GROUP BY id_oddzialu
);

SELECT *
FROM V_PRACOWNICY_LICZBA_OSOB;

SELECT *
FROM USER_UPDATABLE_COLUMNS
WHERE table_name = 'V_PRACOWNICY_LICZBA_OSOB';

CREATE OR REPLACE VIEW V_PRACOWNICY_ROZNE_IMIONA  AS
SELECT DISTINCT pierwsze_imie
FROM pracownicy
ORDER BY 1 ASC;

SELECT *
FROM USER_UPDATABLE_COLUMNS
WHERE table_name = 'V_PRACOWNICY_ROZNE_IMIONA';


-- DROP TABLE przedmioty;
-- DROP TABLE przedmioty_nowe;
CREATE TABLE przedmioty(
kod VARCHAR2(20) CONSTRAINT przedmioty_pk PRIMARY KEY,
nazwa VARCHAR2(50) NOT NULL,
liczba_punktow_ECTS NUMBER);
CREATE TABLE przedmioty_nowe(
kod VARCHAR2(20) CONSTRAINT przedmioty_nowe_pk PRIMARY KEY,
nazwa VARCHAR2(50) NOT NULL,
liczba_punktow_ECTS NUMBER);
INSERT INTO przedmioty VALUES('1100-PB0LII' , 'Podstawy baz danych', 6);
INSERT INTO przedmioty VALUES('1100-BP0LII', 'Projektowanie systemów bazodanowych', 6);
INSERT INTO przedmioty VALUES('1100-PZ0OII', 'Projekt zespołowy', 4);
INSERT INTO przedmioty VALUES('1100-UM0IWH', 'Wstęp do uczenia maszynowego', 5);
INSERT INTO przedmioty_nowe VALUES ('1100-MN0LII', 'Metody numeryczne', 5);
INSERT INTO przedmioty_nowe VALUES ('1100-APZPAD', 'Analiza portfelowa', 8);   
INSERT INTO przedmioty_nowe VALUES ('1100-PZ0OII', 'Projekt zespołowy', 5);
COMMIT;
SELECT * FROM przedmioty ORDER BY kod;
SELECT * FROM przedmioty_nowe ORDER BY kod;


MERGE INTO przedmioty p
USING przedmioty_nowe pn
ON (p.kod = pn.kod) 
WHEN MATCHED THEN
     UPDATE SET
       p.LICZBA_PUNKTOW_ECTS = pn.LICZBA_PUNKTOW_ECTS
WHEN NOT MATCHED THEN
     INSERT (kod, nazwa, LICZBA_PUNKTOW_ECTS)
     VALUES(pn.kod, pn.nazwa, pn.LICZBA_PUNKTOW_ECTS);
     
INSERT INTO przedmioty_nowe VALUES ('1100-SC0UFM', 'Analiza szeregów czasowych', 5);
INSERT INTO przedmioty_nowe VALUES ('1100-KW0ZLM ', 'Komputerowe wspomaganie obliczeń', 2); 
UPDATE przedmioty_nowe SET liczba_punktow_ECTS=3 WHERE kod='1100-APZPAD'; 
UPDATE przedmioty_nowe SET liczba_punktow_ECTS=6 WHERE kod='1100-MN0LII'; 
UPDATE przedmioty SET liczba_punktow_ects=2 WHERE kod='1100-UM0IWH';
INSERT INTO przedmioty VALUES('1100-ZA0ZLI ', 'Zaawansowane algorytmy', 1);
COMMIT;
SELECT * FROM przedmioty ORDER BY kod;
SELECT * FROM przedmioty_nowe ORDER BY kod;


MERGE INTO przedmioty p
USING przedmioty_nowe pn
ON (p.kod = pn.kod) 
WHEN MATCHED THEN
      UPDATE SET
        p.LICZBA_PUNKTOW_ECTS = pn.LICZBA_PUNKTOW_ECTS
      DELETE WHERE p.LICZBA_PUNKTOW_ECTS <= 4
WHEN NOT MATCHED THEN
     INSERT (kod, nazwa, LICZBA_PUNKTOW_ECTS)
     VALUES(pn.kod, pn.nazwa, pn.LICZBA_PUNKTOW_ECTS)
     WHERE pn.LICZBA_PUNKTOW_ECTS >= 5;
     
     
CREATE TABLE osoby(
id NUMBER CONSTRAINT osoby_PK PRIMARY KEY,
imie VARCHAR2(20) NOT NULL,
nazwisko VARCHAR2(50) NOT NULL,
data_urodzenia DATE NOT NULL,
e_mail VARCHAR2(30));
INSERT INTO osoby VALUES(1, 'JAN', 'MICHALAK', TO_DATE('15/04/1994', 'DD/MM/YYYY'), NULL);
INSERT INTO osoby VALUES(2, 'ANNA', 'MICHALAK', TO_DATE('05/12/1990', 'DD/MM/YYYY'), 
'anna_michalak@o2.pl');
INSERT INTO osoby VALUES(3, 'EWA', 'ZATORSKA', TO_DATE('04/07/1980', 'DD/MM/YYYY'), NULL);
INSERT INTO osoby VALUES(4, 'JAN', 'KOWALSKI', TO_DATE('19/11/1983', 'DD/MM/YYYY'), NULL);
COMMIT;
SELECT * FROM osoby ORDER BY id;


MERGE INTO osoby o
USING (SELECT * FROM osoby WHERE e_mail IS NULL) z
ON (o.id=z.id)
  WHEN MATCHED THEN
  UPDATE SET o.e_mail = SUBSTR(z.nazwisko,1,2) || SUBSTR(z.imie,1,3) || TO_CHAR(z.data_urodzenia,'YYYY') || '@uni.pl';
  